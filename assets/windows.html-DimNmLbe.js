import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as t,o}from"./app-BvEWR9Cw.js";const n={};function l(a,i){return o(),s("div",null,i[0]||(i[0]=[t('<p>Windows 相比 Linux 提供了一个图形用户界面（GUI），并成为了使用最广泛的操作系统，有以下经典版本：</p><ul><li>Windows XP - 最经典的版本，也是最受欢迎的版本，已停止支持</li><li>Windows 7 - 是 Windows Vista 的后续版本，已停止支持</li><li>Windows 10 - 最主流的版本</li><li>Windows 11 - 当前最新版本</li></ul><h2 id="cmd-和-powershell" tabindex="-1"><a class="header-anchor" href="#cmd-和-powershell"><span>CMD 和 PowerShell</span></a></h2><p>Windows 有<code>cmd</code>和<code>powershell</code>两种终端程序</p><ul><li><code>tasklist</code>：显示所有进程</li><li><code>tasklist | findstr &quot;StudentMain&quot;</code>：在所有进程中查询包含<code>StudentMain</code>的进程</li><li><code>taskkill /im StudentMain.exe /f</code>：杀掉<code>StudentMain.exe</code>进程</li><li><code>tasklist /pid 1488</code>：杀掉 PID 为<code>1488</code>的进程</li><li><code>tree /f</code>：树形输出文件</li></ul><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h2><p>环境变量是操作系统的概念，用于解决编程中的硬编码情况，一般通过界面的方式来设置环境变量，但可以通过命令维护一套属于自己的环境变量配置</p><p>在 CMD 中使用<code>set</code>命令会显示所有的环境变量，如果要修改环境变量，<code>set [variable]=[value]</code>则是基本的操作，但是这种做法会将原有的值覆盖掉，可以通过<code>%variable%new_Value</code>的方式来实现追加，这种设置方式是临时的，在本次对话结束后就会消失，也不会共享给其他对话</p><p><code>setx</code> 是一个永久性的环境变量设置工具</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;%PATH%;[new_path;]&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这是使用 PowerShell 的例子</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[Environment]::SetEnvironmentVariable(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;Path&quot;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:Path;C:\\Python27\\;C:\\Python27\\Scripts</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">, &quot;User&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="封装系统" tabindex="-1"><a class="header-anchor" href="#封装系统"><span>封装系统</span></a></h2><p>准备工作：</p><ul><li>虚拟机</li><li>系统镜像</li><li>常用软件</li></ul><p>创建虚拟机步骤：</p><ol><li>创建新的虚拟机</li><li>稍后安装操作系统</li><li>选择客户机操作系统版本</li><li>酌情分配虚拟机配置</li><li>不使用网络连接</li><li>创建磁盘容量为 40GB，存储为单个文件</li><li>移除声卡，虚拟机硬件</li><li>设置虚拟机的 CD/DVD 来源为系统镜像</li></ol><p>安装系统：</p><ol><li>选择进入固件方式启动虚拟机</li><li>将 BOOT 启动项设置为 CD-ROM，F10 保存并重启</li><li>开始进入系统的安装</li></ol><p>启动系统：</p><ol><li>在 OOBE 界面中按下<code>CTRL+SHIFT+F3</code>进入部署模式，详见<a href="https://docs.microsoft.com/zh-cn/windows-hardware/manufacture/desktop/boot-windows-to-audit-mode-or-oobe?view=windows-10" target="_blank" rel="noopener noreferrer">微软文档</a></li><li>启用超级管理员模式</li></ol><p>封装系统：</p><ol><li>使用封装系统工具对系统进行封装</li><li>使用微 PE 生成可启动的 ISO，进入 PE</li><li>使用 Dism ++ 进行系统备份，一定要勾选可启动，并且不要存在系统所在的分区</li></ol>',23)]))}const p=e(n,[["render",l]]),h=JSON.parse(`{"path":"/operating-system/windows.html","title":"Windows","lang":"zh-CN","frontmatter":{"title":"Windows","article":false,"description":"Windows 相比 Linux 提供了一个图形用户界面（GUI），并成为了使用最广泛的操作系统，有以下经典版本： Windows XP - 最经典的版本，也是最受欢迎的版本，已停止支持 Windows 7 - 是 Windows Vista 的后续版本，已停止支持 Windows 10 - 最主流的版本 Windows 11 - 当前最新版本 CMD...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Windows\\",\\"description\\":\\"Windows 相比 Linux 提供了一个图形用户界面（GUI），并成为了使用最广泛的操作系统，有以下经典版本： Windows XP - 最经典的版本，也是最受欢迎的版本，已停止支持 Windows 7 - 是 Windows Vista 的后续版本，已停止支持 Windows 10 - 最主流的版本 Windows 11 - 当前最新版本 CMD...\\"}"],["meta",{"property":"og:url","content":"https://jinqiu.wang/operating-system/windows.html"}],["meta",{"property":"og:site_name","content":"JQiue's notes"}],["meta",{"property":"og:title","content":"Windows"}],["meta",{"property":"og:description","content":"Windows 相比 Linux 提供了一个图形用户界面（GUI），并成为了使用最广泛的操作系统，有以下经典版本： Windows XP - 最经典的版本，也是最受欢迎的版本，已停止支持 Windows 7 - 是 Windows Vista 的后续版本，已停止支持 Windows 10 - 最主流的版本 Windows 11 - 当前最新版本 CMD..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-19T06:51:15.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-19T06:51:15.000Z"}]]},"git":{"createdTime":1750315875000,"updatedTime":1750315875000,"contributors":[{"name":"JQiue","username":"JQiue","email":"861947542@qq.com","commits":1,"url":"https://github.com/JQiue"}]},"readingTime":{"minutes":2.14,"words":641},"filePathRelative":"operating-system/windows.md","excerpt":"<p>Windows 相比 Linux 提供了一个图形用户界面（GUI），并成为了使用最广泛的操作系统，有以下经典版本：</p>\\n<ul>\\n<li>Windows XP - 最经典的版本，也是最受欢迎的版本，已停止支持</li>\\n<li>Windows 7 - 是 Windows Vista 的后续版本，已停止支持</li>\\n<li>Windows 10 - 最主流的版本</li>\\n<li>Windows 11 - 当前最新版本</li>\\n</ul>\\n<h2>CMD 和 PowerShell</h2>\\n<p>Windows 有<code>cmd</code>和<code>powershell</code>两种终端程序</p>","autoDesc":true}`);export{p as comp,h as data};
