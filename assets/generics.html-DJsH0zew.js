import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as e,f as n,e as a,o as p}from"./app-BvEWR9Cw.js";const i={};function l(s,t){return p(),r("div",null,[t[0]||(t[0]=e("p",null,"由 Object 转型问题提出泛型，提高安全性（将运行期的错误转换到编译期），省去强转的麻烦",-1)),t[1]||(t[1]=e("p",null,[e("code",null,"<>"),a("中必须放入的是引用数据类型")],-1)),t[2]||(t[2]=e("p",null,"前后泛型必须一致，1.7 版本后面可以不写",-1)),t[3]||(t[3]=e("p",null,"泛型最好不要定义 Object，没有意义",-1)),t[4]||(t[4]=e("p",null,"类可以加上泛型，当创建该类的对象时，就会为该泛型赋值",-1)),t[5]||(t[5]=e("p",null,"方法必须和类的泛型一致，可以单独为方法添加一个特有的泛型",-1)),t[6]||(t[6]=e("h2",{id:"在类中的应用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#在类中的应用"},[e("span",null,"在类中的应用")])],-1)),n(" todo "),t[7]||(t[7]=e("h2",{id:"在方法中的应用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#在方法中的应用"},[e("span",null,"在方法中的应用")])],-1)),n(" todo ")])}const c=o(i,[["render",l]]),u=JSON.parse(`{"path":"/java/generics.html","title":"泛型","lang":"zh-CN","frontmatter":{"title":"泛型","category":"编程语言","tag":["Java"],"article":false,"order":5,"description":"由 Object 转型问题提出泛型，提高安全性（将运行期的错误转换到编译期），省去强转的麻烦 <>中必须放入的是引用数据类型 前后泛型必须一致，1.7 版本后面可以不写 泛型最好不要定义 Object，没有意义 类可以加上泛型，当创建该类的对象时，就会为该泛型赋值 方法必须和类的泛型一致，可以单独为方法添加一个特有的泛型 在类中的应用 在方法中的应用","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"泛型\\",\\"description\\":\\"由 Object 转型问题提出泛型，提高安全性（将运行期的错误转换到编译期），省去强转的麻烦 <>中必须放入的是引用数据类型 前后泛型必须一致，1.7 版本后面可以不写 泛型最好不要定义 Object，没有意义 类可以加上泛型，当创建该类的对象时，就会为该泛型赋值 方法必须和类的泛型一致，可以单独为方法添加一个特有的泛型 在类中的应用 在方法中的应用\\"}"],["meta",{"property":"og:url","content":"https://jinqiu.wang/java/generics.html"}],["meta",{"property":"og:site_name","content":"JQiue's notes"}],["meta",{"property":"og:title","content":"泛型"}],["meta",{"property":"og:description","content":"由 Object 转型问题提出泛型，提高安全性（将运行期的错误转换到编译期），省去强转的麻烦 <>中必须放入的是引用数据类型 前后泛型必须一致，1.7 版本后面可以不写 泛型最好不要定义 Object，没有意义 类可以加上泛型，当创建该类的对象时，就会为该泛型赋值 方法必须和类的泛型一致，可以单独为方法添加一个特有的泛型 在类中的应用 在方法中的应用"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-19T06:51:15.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2025-06-19T06:51:15.000Z"}]]},"git":{"createdTime":1750315875000,"updatedTime":1750315875000,"contributors":[{"name":"JQiue","username":"JQiue","email":"861947542@qq.com","commits":1,"url":"https://github.com/JQiue"}]},"readingTime":{"minutes":0.53,"words":158},"filePathRelative":"java/generics.md","excerpt":"<p>由 Object 转型问题提出泛型，提高安全性（将运行期的错误转换到编译期），省去强转的麻烦</p>\\n<p><code>&lt;&gt;</code>中必须放入的是引用数据类型</p>\\n<p>前后泛型必须一致，1.7 版本后面可以不写</p>\\n<p>泛型最好不要定义 Object，没有意义</p>\\n<p>类可以加上泛型，当创建该类的对象时，就会为该泛型赋值</p>\\n<p>方法必须和类的泛型一致，可以单独为方法添加一个特有的泛型</p>\\n<h2>在类中的应用</h2>\\n<!-- todo -->\\n<h2>在方法中的应用</h2>\\n<!-- todo -->","autoDesc":true}`);export{c as comp,u as data};
